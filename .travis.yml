language: c++

branches:
  except:
    - automatic

cache:
  directories:
    - download

matrix:
  include:
    - os: linux
      dist: bionic
      env:
        - _BUILD=win32
        - _MINGW=mingw32
        - _HOST=i686-w64-mingw32
      before_install:
        - docker pull jpcima/arch-mingw
      install:
        - container=$(docker run -d -i -t -v /home:/home jpcima/arch-mingw /bin/bash)
        - |
          cross() {
            docker exec -w "$(pwd)" -e "_BUILD=$_BUILD" -e "_MINGW=$_MINGW" -e "_HOST=$_HOST" -i -t "$container" "$@"
          }
      script:
        - cross bash .travis/script-mingw.sh
        - cp -drfv bin miniopl3-"$_BUILD"
        - rm -f miniopl3-"$_BUILD"/README
        - install -d release
        - zip -9 -r release/miniopl3-"$_BUILD".zip miniopl3-"$_BUILD"
    - os: linux
      dist: bionic
      env:
        - _BUILD=win64
        - _MINGW=mingw64
        - _HOST=x86_64-w64-mingw32
      before_install:
        - docker pull jpcima/arch-mingw
      install:
        - container=$(docker run -d -i -t -v /home:/home jpcima/arch-mingw /bin/bash)
        - |
          cross() {
            docker exec -w "$(pwd)" -e "_BUILD=$_BUILD" -e "_MINGW=$_MINGW" -e "_HOST=$_HOST" -i -t "$container" "$@"
          }
      script:
        - cross bash .travis/script-mingw.sh
        - cp -drfv bin miniopl3-"$_BUILD"
        - rm -f miniopl3-"$_BUILD"/README
        - install -d release
        - zip -9 -r release/miniopl3-"$_BUILD".zip miniopl3-"$_BUILD"
    - os: osx
      osx_image: xcode9.2
      env:
        - _BUILD=macos
      script:
        - bash .travis/script-macos.sh
        - cp -av bin miniopl3-"$_BUILD"
        - rm -f miniopl3-"$_BUILD"/README
        - install -d release
        - zip -9 -r release/miniopl3-"$_BUILD".zip miniopl3-"$_BUILD"
    - os: linux
      dist: trusty
      env:
        - _BITS=64
        - _BUILD=linux64
      before_install:
        - sudo apt-get update -qq
      install:
        - sudo apt-get install checkinstall
      script:
        - bash .travis/script-linux.sh
        - cp -drfv bin miniopl3-"$_BUILD"
        - rm -f miniopl3-"$_BUILD"/README
        - install -d release
        - zip -9 -r release/miniopl3-"$_BUILD".zip miniopl3-"$_BUILD"
        - echo "A simple mono-timbral OPL3 plugin" > description-pak
        - sudo checkinstall --type=debian --install=no --default --pkgname=miniopl3 --pkgversion="`git describe --abbrev=0 | sed 's/^v//'``git log -n 1 --pretty=format:"+%cd~git%h" --date=short master | sed 's/-//g'`" --pkgarch=amd64 --pkgrelease=0jpc1 --pkglicense=BSL-1.0 --pkggroup=sound --maintainer="jp-dev@inbox.ru" --nodoc
        - sudo mv -f *.deb release/miniopl3-"$_BUILD".deb

before_script:
  - sed -i~ 's%/usr/local%/usr%g' plugins/*/Makefile

before_deploy:
  - |
    if test "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_PULL_REQUEST" = "false"; then
      export TRAVIS_TAG=automatic
      git tag -f "$TRAVIS_TAG"
    fi

deploy:
  provider: releases
  api_key: "$GITHUB_TOKEN"
  file: release/*
  file_glob: true
  prerelease: true
  overwrite: true
  edge: true
  on:
    branch: master

env:
  global:
    secure: "mQf6NdewZTNRXwWJS6HKQJ8l/WxvPVhTj0aVFKNOnP30Jt/xt4Sig0rlccXrpX4DaqzFK7gTAMxwB7PY/hMT1NYSG7Aw50klOWXG1sB5W133cNN2Tv0EGiLW0DKd4vWbaQz09FcpmyF9vHi7xP0OAEfWvWDyqk/TP+ajHyIClYDNmXBb9i8Txm5d1ax3HQUsBSGGcMMC1Bo6F7ZxasF/NNSZeEfvr7CB+QykxbOnpuhHxiWgGj3iyzH6YQI8mHHhmRTc4+W7TMY5Z/RSgB603+X7sYUWwHEilnB5Sxm05Twz+dbaHVnmPWZnJW2ugf1jLwRCSo9Bo8gkmr0d+yl2CgCiNfZkgv4hVzxvZo93pPlaw9jNPhrMXXmK/sY4eE7xSkSJXZoB1TaxlZyzjUYdxpZN10YJqOUSJqgSHyMmGVe2y55XLblCl7h6hLnE+RtVOCUBkoT+eyw79z6Iw0/3wUTT1Ww89Ih4zcJxou2fRUatGqC8LkrnY1wDLRjhHtIx5eqraYoMLqI67GeUXejOiaRb8ugWrvXvbqqFk63dJTa0vONtmeVBBU3fEnQqa98SuAdSR0ylgsRgCAX6xy2Oub+7iH25QCwAkqyVmzLoi1+nlhEtg79apPc4DpkGCgeR/979XddicMhW0Zd1UYcrPIN/fmraCslR0nYY1fl7YLg="

notifications:
  irc: "ircs://chat.freenode.net:7070/#librazik"
